#include "test_runner.h"

#include <vector>

using namespace std;

// Реализуйте здесь шаблонный класс Table

template<class T>
class Table {
public:
	Table (size_t m, size_t n) {
		vector<T> str(m);
		vector<vector<T>> matrix;
		for (size_t i = 0; i < n; i++) {
			matrix.push_back(str);
		}
	}
private:
	vector<vector<T>> _table;
};

void TestTable() {
  Table<int> t(1, 1);
  ASSERT_EQUAL(t.Size().first, 1u);
  ASSERT_EQUAL(t.Size().second, 1u);
  t[0][0] = 42;
  ASSERT_EQUAL(t[0][0], 42);
  t.Resize(3, 4);
  ASSERT_EQUAL(t.Size().first, 3u);
  ASSERT_EQUAL(t.Size().second, 4u);
}

int main() {
  TestRunner tr;
  RUN_TEST(tr, TestTable);
  return 0;
}
